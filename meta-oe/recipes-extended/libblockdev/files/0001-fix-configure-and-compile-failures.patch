From 21654e3719e0a289e735918b234f7aae6766e3a1 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Wed, 18 Jul 2018 11:26:28 +0800
Subject: [PATCH] fix configure and compile failures

1. Fix do_configure failure
---------------------------
|Checking header volume_key/libvolume_key.h existence and usability.
../tmp/6tvtK.c:1:38: fatal error: volume_key/libvolume_key.h:
No such file or directory
| #include <volume_key/libvolume_key.h>
---------------------------
We explictly add volume_key and dmraid to DEPENDS, do not need
configure to test.

2. Fix config.h not found
Add it to configure.ac

3. Correct AC_DEFINE
...
autoheader: warning: missing template: LIBMOUNT_NEW_ERR_API
autoheader: Use AC_DEFINE([LIBMOUNT_NEW_ERR_API], [], [Description])
...

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>

Checking header dmraid/dmraid.h existence and usability.../tmp/
ktVJ6.c:1:27: fatal error: dmraid/dmraid.h: No such file or directory
| #include <dmraid/dmraid.h>

fix this by add --disable-dmraid

Signed-off-by: Changqing Li <changqing.li@windriver.com>
---
 configure.ac | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/configure.ac b/configure.ac
index a37f337..a8cfe2f 100644
--- a/configure.ac
+++ b/configure.ac
@@ -9,6 +9,8 @@ AC_DISABLE_STATIC
 AM_INIT_AUTOMAKE([foreign -Wall -Werror -Wno-syntax -Wno-portability])
 AC_CONFIG_MACRO_DIR([m4])
 
+AC_CONFIG_HEADERS([config.h])
+
 AM_PATH_PYTHON
 
 AM_PROG_AR
@@ -194,10 +196,9 @@ LIBBLOCKDEV_PKG_CHECK_MODULES([KMOD], [libkmod >= 19])
 AS_IF([test "x$with_crypto" != "xno"],
       [LIBBLOCKDEV_PKG_CHECK_MODULES([CRYPTSETUP], [libcryptsetup >= 1.6.7])
       AS_IF([$PKG_CONFIG --atleast-version=2.0 libcryptsetup],
-            [AC_DEFINE([LIBCRYPTSETUP_2])], [])
+            [AC_DEFINE([LIBCRYPTSETUP_2], [1], [new version of libcryptsetup])])
       AS_IF([test "x$with_escrow" != "xno"],
-            [LIBBLOCKDEV_PKG_CHECK_MODULES([NSS], [nss >= 3.18.0])
-             LIBBLOCKDEV_CHECK_HEADER([volume_key/libvolume_key.h], [$GLIB_CFLAGS $NSS_CFLAGS], [libvolume_key.h not available])],
+            [LIBBLOCKDEV_PKG_CHECK_MODULES([NSS], [nss >= 3.18.0])],
             [])
       ],
       [])
@@ -218,7 +219,8 @@ AS_IF([test "x$with_fs" != "xno"],
       [LIBBLOCKDEV_PKG_CHECK_MODULES([MOUNT], [mount >= 2.23.0])
        # new versions of libmount has some new functions we can use
        AS_IF([$PKG_CONFIG --atleast-version=2.30.0 mount],
-             [AC_DEFINE([LIBMOUNT_NEW_ERR_API])], [])
+       [AC_DEFINE([LIBMOUNT_NEW_ERR_API], [1], [new versions of libmount has some new functions we can use])],
+       [])
 
        LIBBLOCKDEV_PKG_CHECK_MODULES([BLKID], [blkid >= 2.23.0])
        # older versions of libblkid don't support BLKID_SUBLKS_BADCSUM so let's just
@@ -243,7 +245,7 @@ AS_IF([test "x$with_nvdimm" != "xno"],
        LIBBLOCKDEV_PKG_CHECK_MODULES([NDCTL], [libndctl >= 58.4])
        # new versions of libndctl new modes
        AS_IF([$PKG_CONFIG --atleast-version=60 libndctl],
-             [AC_DEFINE([LIBNDCTL_NEW_MODES])], [])]
+             [AC_DEFINE([LIBNDCTL_NEW_MODES], [1], [new version of libndctl new modes])], [])]
       [])
 
 AS_IF([test "x$with_vdo" != "xno"],
-- 
2.7.4

